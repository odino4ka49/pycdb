/** * Created by 1ka on 3/28/14. */ZOOMPYCDB.namespace("ZOOMPYCDB.TempData");ZOOMPYCDB.TempData = function(cookies){    var chosen_rel,        chosen_cid,        chosen_source,        object,        obj_attributes,        fragment,        nodes_group,        chosen_tags = [],        cookies = cookies,        setChosenCid = function(cid){            chosen_cid = cid;        },        getChosenCid = function(){            return chosen_cid;        },        setChosenRel = function(rel){            chosen_rel = rel;        },        getChosenRel = function(){            var result = (chosen_rel===undefined)? undefined: jQuery.extend(true,{},chosen_rel);            return result;        },        setChosenSource = function(node){            chosen_source = node;        },        addChosenTag = function(tag){        	if(chosen_tags.filter(function(t){return t.id==tag.id;}).length==0)        		chosen_tags.push(tag);        	//console.log(chosen_tags);        	$(document).trigger("chosen_tags_list_changed");        },        removeChosenTag = function(id){        	chosen_tags = chosen_tags.filter(function(t){        		return t.id!=id;        	});        	$(document).trigger("chosen_tags_list_changed");        },        getChosenTags = function(){        	var result = (chosen_tags===undefined)? undefined: jQuery.extend(true,[],chosen_tags);            return result;        },        getChosenTagsId = function(){        	var result = [];        	chosen_tags.forEach(function(tag){        		result.push(tag.id);        	});            return result;        },        getChosenSource = function(){            var result = (chosen_source===undefined)? undefined: (chosen_source instanceof Array)? jQuery.extend(true,[],chosen_source):jQuery.extend(true,{},chosen_source);            return result;        },        //sets chosen object        setNode = function(obj){            $(document).trigger("set_loading_cursor");            $.ajax({                type: "GET",                url: ZOOMPYCDB.serveradr()+"graph_editor/getObjAttributes/"+obj.cid+"/"+obj.id,                error: function(xhr, ajaxOptions, thrownError) {                    $(document).trigger("unset_loading_cursor");                    $(document).trigger("error_message",thrownError);                },                success: function(data){                    object = obj;                    obj_attributes = data;                    $(document).trigger("unset_loading_cursor");                    $(document).trigger("node_chosen");                }            });        },        setRelation = function(obj){            $(document).trigger("set_loading_cursor");            $.ajax({                type: "GET",                url: ZOOMPYCDB.serveradr()+"graph_editor/getRelAttributes/"+obj.cid+"/"+obj.id,                error: function(xhr, ajaxOptions, thrownError) {                    $(document).trigger("unset_loading_cursor");                    $(document).trigger("error_message",thrownError);                },                success: function(data){                    object = obj;                    obj_attributes = data;                    $(document).trigger("unset_loading_cursor");                    $(document).trigger("rel_chosen");                }            });        },        setBackground = function(obj){            object = obj;            $(document).trigger("bg_chosen");        },        setFragment = function(frag){            fragment = frag;            //to paste in future            changeFragmentCoordinates(0,0);        	$(document).trigger("set_cookie",["fragment",JSON.stringify(fragment)]);        },        //returns fragment to paste with definded coordinates        getFragment = function(coord){            var result;            fragment = cookies.get("fragment");            changeFragmentCoordinates(coord.x,coord.y);            result = (fragment==undefined)? undefined: jQuery.extend(true,{},fragment);            return result;        },        changeFragmentCoordinates = function(x,y){            var rect_selection = fragment.rect;            //differences between needed coordinates and selection rectangle coordinates            var difX = rect_selection["x"]-x;            var difY = rect_selection["y"]-y;            rect_selection.x -= difX;            rect_selection.y -= difY;            fragment.nodes.forEach(function(node)            {                node.x -= difX;                node.y -= difY;            });        },                getObject = function(){            var result = (object===undefined)? undefined: jQuery.extend(true,{},object);            return result;        },        getObjectAttr = function(){            var result = (obj_attributes===undefined)? undefined: jQuery.extend(true,{},obj_attributes);            return result;        },                setNodesGroup = function(frag){        	nodes_group = new Object();        	nodes_group.nodes = frag.nodes;        	checkNodesGroupCommon();        },        checkNodesGroupCommon = function(){        	if(nodes_group.nodes.length!=0){	        	nodes_group.common = (nodes_group.nodes[0]===undefined)? undefined: jQuery.extend(true,{},nodes_group.nodes[0]);	        	for (i in nodes_group.common){		        	nodes_group.nodes.forEach(function(node){		        		if(nodes_group.common[i]!=node[i])		        			nodes_group.common[i]=null;		        	});		        }	        	object = nodes_group.common;        		$(document).trigger("ng_chosen");        	}        	else{        		object = null;        		$(document).trigger("clean_object_editor");        	}        },        getNodesGroup = function(){        	var result = (nodes_group===undefined)? undefined: jQuery.extend(true,{},nodes_group);            return result;        },                setClassNode = function(obj){	        object = obj;            $(document).trigger("class_node_chosen");        },        setClassRel = function(obj){        	object = obj;            $(document).trigger("class_rel_chosen");        };    return {        setChosenCid: setChosenCid,        getChosenCid: getChosenCid,        setChosenRel: setChosenRel,        getChosenRel: getChosenRel,        addChosenTag: addChosenTag,        removeChosenTag: removeChosenTag,        getChosenTags: getChosenTags,        getChosenTagsId: getChosenTagsId,        setChosenSource: setChosenSource,        getChosenSource: getChosenSource,        getFragment: getFragment,        setNode: setNode,        setFragment: setFragment,        setRelation: setRelation,        setBackground: setBackground,        setClassNode: setClassNode,        setClassRel: setClassRel,        getObject: getObject,        getObjectAttr: getObjectAttr,        setNodesGroup: setNodesGroup,        getNodesGroup: getNodesGroup,    };};